<%- include('../../partials/main', { pageTitle: 'Add Products' }) %>

<style>
    .inline{
        display: inline-flex;
    }
    #select2-product-container , #select2-unit-container{
        font-size: calc(14px + (16 - 14) * ((100vw - 320px) / (1920 - 320)));
    }
        .mb-4{
            justify-content: space-evenly;
        }
        .completebutton{
            align-items: end;
            width: 30%;
            margin-right: 2rem;
        }
        .addbutton{
            align-items: flex-end;
            width: 30%;
            }
</style>


<div class="page-body">
<!-- tracking table start -->
<div class="container-fluid">
    <div class="row">
        <div class="col-sm-12">
            <div class="card">
                <div class="card-body">
                    <div class="title-header title-header-block package-card">
                        <div>
                            <h5>Add Expense</h5>
                        </div>
                        <form class="theme-form theme-form-2 mega-form" method="post" action="/admin/order/add-expense/<%= orderId %>">
                            <div class="add-product">
                                <div class="card-header-1">
                                    <h5>Product Details</h5>
                                </div>

                                <input type="hidden" name="orderId" value="<%= orderId %>">
                                <div class="mb-4 row align-items-center">
                                    <label class="form-label-title col-lg-2 col-md-3 mb-0">Select Product</label>
                                    <div class="col-sm-9 col-lg-10">
                                        <select class="js-example-basic-single w-100 form-control" name="product" id="product" onchange="getProductData()">
                                            <option value="none" disabled selected>-- Select the Product --</option> 
                                            <% if (products != '') { %>        
                                                <% products.forEach((row, index) => { %> 
                                                    <% if (row.unit === 'SQRFT' && row.area !== 0 || row.unit === 'NOS' && row.quantity !== 0) { %>
                                                        <option value="<%- row._id %>">
                                                            <%- row.product_id.name %> || 
                                                            <% if (row.unit === 'SQRFT') { %>
                                                            Total Area Available <%= row.area %>
                                                            <% } else { %>
                                                                Total Quantity Available <%= row.quantity %>
                                                            <% } %>
                                                        </option>
                                                    <% } %>
                                                <% }) %>
                                            <%  } else { %>
                                                <option value="none" disabled>No Products In Inventory</option>
                                            <% } %>
                                        </select>
                                    </div>
                                </div>

                                <div class="mb-4 row align-items-center">
                                    <label class="col-sm-3 col-form-label form-label-title">Unit</label>
                                    <div class="col-sm-9">
                                        <input class="form-control" type="text" placeholder="Product Unit" name="unit" id="product_unit" required readonly>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-sm-6">
                                        <div class="mb-4 row align-items-center">
                                            <label class="form-label-title col-sm-3 mb-0">Width</label>
                                            <div class="col-sm-9">
                                                <input class="form-control" type="text" oninput="validateFloat(this)" placeholder="Enter Product width" name="width" id="width" value="0" required>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="mb-4 row align-items-center">
                                            <label class="form-label-title col-sm-3 mb-0">Height</label>
                                            <div class="col-sm-9">
                                                <input class="form-control" type="text" oninput="validateFloat(this)" placeholder="Enter Product Height" name="height" id="height" value="0"  required>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="mb-4 row align-items-center">
                                    <label class="form-label-title col-sm-3 mb-0">Quantity</label>
                                    <div class="col-sm-9">
                                        <input class="form-control" type="number" placeholder="Quantity of Product" name="quantity" id="quantity" oninput="getProductQuantity(this)"  required>
                                    </div>
                                </div>
                    
                                <div class="mb-4 row align-items-center">
                                    <label class="form-label-title col-sm-3 mb-0">Total Area</label>
                                    <div class="col-sm-9">
                                        <input class="form-control" type="text" placeholder="Total area covered" name="area" id="total_area"  required>
                                    </div>
                                </div>
                    
                                <div class="mb-4 row align-items-center">
                                    <label class="form-label-title col-sm-3 mb-0">Rate</label>
                                    <div class="col-sm-9">
                                        <input class="form-control" type="text" placeholder="Rate of Product" name="rate" id="rate"  readonly>
                                    </div>
                                </div>
                                                
                                <div class="mb-4 row align-items-center">
                                    <label class="form-label-title col-sm-3 mb-0">Total Amount</label>
                                    <div class="col-sm-9">
                                        <input class="form-control" type="text" placeholder="Amount" name="amount" id="total_amount"  required>
                                    </div>
                                </div>
                                
                                <div class="mb-4 row align-items-center">
                                    <button id="addProductButton" class="btn btn-solid addbutton col-6 mr-3" type="submit">Add Expense</button>
                                </div>

                            </div>
                        </form>
                    </div>
                </div>    
            </div>
        </div> 
    </div>
</div>
<!-- tracking table end -->

<div class="container-fluid">
    <!-- footer start-->
    <%- include('../../partials/footer')%>
</div>
</div>

<script>
    // Update Total Area
    function updateTotalArea() {
        var width = parseFloat(document.getElementById('width').value) || 0; // Default to 1 if width is 0
        var height = parseFloat(document.getElementById('height').value) || 0; // Default to 1 if height is 0
        var quantity = parseFloat(document.getElementById('quantity').value) || 0;
        var total_area = (width * height * quantity).toFixed(2);
        document.getElementById('total_area').value = total_area;
    }

    // Update Total Amount
    function updateTotalAmount() {
        var width = parseFloat(document.getElementById('width').value) || 1; // Default to 1 if width is 0
        var height = parseFloat(document.getElementById('height').value) || 1; // Default to 1 if height is 0
        var quantity = parseFloat(document.getElementById('quantity').value) || 0;
        var rate = parseFloat(document.getElementById('rate').value) || 0;
        var total_amount = (width * height * quantity * rate).toFixed(2);
        document.getElementById('total_amount').value = total_amount;
    }

    // Event listeners for input fields
    document.getElementById('width').addEventListener('input', updateTotalArea);
    document.getElementById('height').addEventListener('input', updateTotalArea);
    document.getElementById('quantity').addEventListener('input', updateTotalArea);

    document.getElementById('width').addEventListener('input', updateTotalAmount);
    document.getElementById('height').addEventListener('input', updateTotalAmount);
    document.getElementById('quantity').addEventListener('input', updateTotalAmount);
    document.getElementById('rate').addEventListener('input', updateTotalAmount);

</script>

<script>
    function validateFloat(floatField) {
        // Remove any non-numeric characters (including '.') from the input
        floatField.value = floatField.value.replace(/[^0-9.]/g, '');

        // Parse the entered value as a float
        var enteredValue = parseFloat(floatField.value);

        // Display an error message if the entered value is not a valid number or less than or equal to 0
        var errorMessage = document.getElementById("errorMessage");
        if (isNaN(enteredValue) || enteredValue <= 0) {
            errorMessage.textContent = "Please enter a valid number greater than 0.";
            document.getElementById("confirmStatusChange").disabled = true;
        } else {
            errorMessage.textContent = "";
            document.getElementById("confirmStatusChange").disabled = false;
        }
    }
</script>

    <script>
        function getProductData() {
            var selectedProductId = document.getElementById("product").value;
            
            // Make a request to your API using the selected product ID
            fetch(`/admin/inventory/products/${selectedProductId}`)
                .then(response => response.json())
                .then(data => {
                    console.log(data)
                    if(data.unit === "SQRFT") {
                        console.log("changes to sqrft")
                        // Enable width, height, and area inputs
                        $('#width, #height, #total_area').prop('disabled', false);
                        $('#quantity').prop('disabled', false);
                        document.getElementById("product_unit").value = "SQRFT";
                    }else{
                        console.log("changes to nos")
                        document.getElementById("product_unit").value = "NOS";
                        $('#width, #height, #total_area').prop('disabled', true); 
                    }
                    // Update the rate input field with the fetched rate value
                    document.getElementById("rate").value = data.rate;
                    var unitType = data.unitType; // assuming unitType is the property in the data object
                    document.getElementById("unit").value = unitType;
                })
                .catch(error => console.error('Error fetching product data:', error));
            }
    </script>

<script>
    function getProductQuantity() {
        var selectedProductId = document.getElementById("product").value;
        var quantity = parseInt(document.getElementById("quantity").value);
        var total_area = parseInt(document.getElementById("total_area").value);
        
        // Make a request to your API using the selected product ID
        fetch(`/admin/inventory/products/${selectedProductId}`)
            .then(response => response.json())
            .then(data => {
                if(data.unit === "NOS"){
                    if(quantity > data.quantity) {
                        document.getElementById("addProductButton").disabled = true;
                        alert("Quantity is greater than available quantity.");
                    }else{
                        document.getElementById("addProductButton").disabled = false;
                    }
                }else{
                    if(total_area > data.area) {
                        document.getElementById("addProductButton").disabled = true;
                        alert("Area is greater than available area.");
                    }else{
                        document.getElementById("addProductButton").disabled = false;
                    }
                }
                document.getElementById("addProductButton").disabled = false;
            })
            .catch(error => console.error('Error fetching product data:', error));
        }
</script>

<%- include('../../partials/end')%>

